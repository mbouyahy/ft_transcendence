

# server {
#     listen 443 ssl;
#     ssl_protocols TLSv1.2;
#     ssl_certificate /etc/nginx/ssl/ft_trans.crt;
#     ssl_certificate_key /etc/nginx/ssl/ft_trans.key;
#     # listen 80;

#     root /usr/share/nginx/html;

#     index index.html;

#     location / {
#         root /usr/share/nginx/html/;
#         try_files $uri $uri/ /index.html;
#     }

#     location /api/ {
#         proxy_pass http://127.0.0.1:8000; 
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#     location /nginx_status {
#         stub_status on;
#     }
# }


# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name 127.0.0.1;
    return 301 https://$host$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl;
    server_name 127.0.0.1;  # Adjust as necessary

    ssl_protocols TLSv1.2;
    ssl_certificate /etc/nginx/ssl/ft_trans.crt;
    ssl_certificate_key /etc/nginx/ssl/ft_trans.key;

    root /usr/share/nginx/html;
    index index.html;

    # Main location block
    location / {
        root /usr/share/nginx/html/;
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to backend
    location /api/ {
        proxy_pass https://127.0.0.1:8000;  # Backend server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Metrics endpoint (if using Prometheus or similar)
    location /metrics {
        proxy_pass https://127.0.0.1:8000/metrics;  # Adjust as needed
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Status page
    location /nginx_status {
        stub_status on;
    }
}
